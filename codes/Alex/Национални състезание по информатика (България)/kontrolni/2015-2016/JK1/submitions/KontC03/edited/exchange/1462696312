#include <iostream>
#include <utility>
#include <vector>
#include <algorithm>
using namespace std;

const int MAXN=256;
const int MAXS=2048;

int n, s;
int a[MAXN], b[MAXN], c[MAXN];

vector<pair<int, int>> coins;
long long memo[MAXS][MAXN];

void Init()
{
    cin>>s>>n;
    for (int i=0; i<n; i++)
    {
        cin>>a[i];
    }
    for (int i=0; i<n; i++)
    {
        cin>>b[i];
    }
    for (int i=0; i<n; i++)
    {
        coins.emplace_back(a[i], b[i]);
    }
    sort(coins.begin(), coins.end());
}

void ToMinusOne()
{
    for (int i=0; i<MAXS; i++)
    {
        for (int j=0; j<MAXN; j++)
        {
            memo[i][j]=-1;
        }
    }
}

long long Solve(int sum, int cnt)
{
    if (memo[sum][cnt]!=-1)
        return memo[sum][cnt];

    if (sum==0)
    {
        memo[sum][cnt]=1;
        return 1;
    }
    else if (cnt>=n)
    {
        memo[sum][cnt]=0;
        return 0;
    }

    long long tmp=0;
    for (int i=0; i<=coins[cnt].second; i++)
    {
        int newSum=sum-coins[cnt].first*i;
        if (newSum>=0) tmp+=Solve(newSum, cnt+1);
    }

    memo[sum][cnt]=tmp;
    return tmp;
}

int main()
{
    Init();
    ToMinusOne();
    cout<<Solve(s, 0)<<endl;
    return 0;
}

