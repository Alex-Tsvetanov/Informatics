#include <iostream>
#include <utility>
#include <vector>
#include <algorithm>
using namespace std;

const int MAXN=256;
const int MAXS=2048;

int n, s;
int a[MAXN], b[MAXN], c[MAXN];

vector<pair<int, int>> coins;
long long dp[MAXS];

void Init()
{
    cin>>s>>n;
    for (int i=0; i<n; i++)
    {
        cin>>a[i];
    }
    for (int i=0; i<n; i++)
    {
        cin>>b[i];
        c[a[i]]+=b[i];
    }
    for (int i=1; i<=200; i++)
    {
        if (c[i]!=0) coins.emplace_back(i, c[i]);
    }
    sort(coins.begin(), coins.end());
}

void Solve()
{
    dp[0]=1;
    for (int i=0; i<coins.size(); i++)
    {
        for (int j=s; j>=coins[i].first; j--)
        {
            for (int k=1; k<=coins[i].second; k++)
            {
                int ind=j-coins[i].first*k;

                if (ind<0) k=coins[i].second+1;
                else dp[j]+=dp[ind];
            }
        }
    }
}

int main()
{
    Init();
    Solve();
    cout<<dp[s]<<endl;
    return 0;
}

