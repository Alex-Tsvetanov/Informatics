#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;
long long n,m;
long long nms=0;
char pole[128][128];
bool popylnenolie[128][128];
long long proveri(long long x,long long y,long long sekundi){
//    cout<<sekundi<<"\n"<<x<<" "<<y<<"\n";
popylnenolie[x][y]=1;
if(pole[x][y]=='v'){
while(x<=n and (pole[x][y]=='.' or (pole[x][y]!='.' and popylnenolie[x][y]==1))){
sekundi++;
x++;
}
if(x==n){
return sekundi;
}else{
return proveri(x,y,sekundi);
}
}
if(pole[x][y]=='^'){
while(x>=0 and (pole[x][y]=='.' or (pole[x][y]!='.' and popylnenolie[x][y]==1))){
sekundi++;
x--;
}
if(x==-1){
return sekundi;
}else{
return proveri(x,y,sekundi);
}
}
if(pole[x][y]=='<'){
while(y>=0 and (pole[x][y]=='.' or (pole[x][y]!='.' and popylnenolie[x][y]==1))){
sekundi++;
y--;
}
if(y==-1){
return sekundi;
}else{
return proveri(x,y,sekundi);
}
}
if(pole[x][y]=='>'){
while(y<=n and (pole[x][y]=='.' or (pole[x][y]!='.' and popylnenolie[x][y]==1))){
sekundi++;
y++;
}
if(y==n){
return sekundi;
}else{
return proveri(x,y,sekundi);
}
}
return 0;
}
int main(){
ios::sync_with_stdio(false);
cin>>n>>m;
for(long long i=0;i<n;i++){
cin>>pole[i];
}
for(long long i=0;i<n;i++){
for(long long r=0;r<m;r++){
if(pole[i][r]!='.'){ //and (pole[i][r]=='v' and (i==0 or pole[i-1][r]!='v'))){
nms=max(proveri(i,r,0),nms);
}
for(long long k=0;k<n;k++){
    for(long long j=0;j<m;j++){
    popylnenolie[k][j]=0;
    }
}
}
}
cout<<nms;
return 0;
}
