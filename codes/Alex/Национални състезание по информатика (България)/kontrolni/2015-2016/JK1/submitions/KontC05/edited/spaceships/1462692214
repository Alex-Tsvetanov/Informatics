#include <iostream>
#include <vector>

char _inp[101][101];
char inp[101][101];
//std::vector<std::pair<int, int> > graph[101][101];
int n, m;

int simulate(int x, int y)
{
	if(inp[x][y] == 'v')
	{
		for(int i = y+1;i < n;++ i)
		{
			if(inp[x][i] != '.')
			{
				inp[x][y] = '.';
				int res = i - y + simulate(x, i);
				inp[x][y] = _inp[x][y];
				return res;
			}
		}
		return n - y;
	}
	if(inp[x][y] == '^')
	{
		for(int i = y-1;i >= 0;-- i)
		{
			if(inp[x][i] != '.')
			{
				inp[x][y] = '.';
				int res = y - i + simulate(x, i);
				inp[x][y] = _inp[x][y];
				return res;
			}
		}
		return y + 1;
	}
	if(inp[x][y] == '<')
	{
		for(int i = x-1;i >= 0;-- i)
		{
			if(inp[i][y] != '.')
			{
				inp[x][y] = '.';
				int res = x - i + simulate(i, y);
				inp[x][y] = _inp[x][y];
				return res;
			}
		}
		return x + 1;
	}
	if(inp[x][y] == '>')
	{
		for(int i = x+1;i < m;++ i)
		{
			if(inp[i][y] != '.')
			{
				inp[x][y] = '.';
				int res = i - x + simulate(i, y);
				inp[x][y] = _inp[x][y];
				return res;
			}
		}
		return m - x;
	}
}

int main()
{
	std::cin >> n >> m;
	for(int i = 0;i < n;++ i)
	{
		for(int j = 0;j < m;++ j)
		{
			std::cin >> _inp[j][i];
			inp[j][i] = _inp[j][i];
		}
	}

	int max = 0;
	for(int x = 0;x < m;++ x)
	{
		for(int y = 0;y < n;++ y)
		{
			if(inp[x][y] != '.')
			{

				int r = simulate(x, y);
				if(r > max)
					max = r;
			}
		}
	}
	std::cout << max << std::endl;
	return 0;
}
