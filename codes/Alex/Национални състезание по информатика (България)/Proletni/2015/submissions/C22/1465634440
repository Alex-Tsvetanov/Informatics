(I1
I22
I2
(dp0
Vpartition.%l
p1
(VC-partition.cpp
p2
S'#include<iostream>\r\n#include<algorithm>\r\nusing namespace std;\r\nint red_number;\r\nint red[128][256],sizeOfRed[128];\r\nint compareRed1[256],compareRed2[256],indexRed1=0,indexRed2=0,compareRed1Sbor=0,compareRed2Sbor=0;\r\nint answer[128];\r\nint main(){\r\n    ios::sync_with_stdio(false);\r\n    cin>>red_number;\r\n    for(int i=0;i<red_number;i++){\r\n        cin>>sizeOfRed[i];\r\n        indexRed1=0;\r\n        indexRed2=0;\r\n        long long total_sbor=0,current_sbor=0;\r\n        bool it_is_1=false;\r\n        for(int j=0;j<sizeOfRed[i];j++){\r\n            cin>>red[i][j];\r\n            total_sbor+=red[i][j];\r\n        }\r\n        sort(red[i],red[i]+sizeOfRed[i]);\r\n\r\n        for(int j=0;j<sizeOfRed[i];j++){\r\n            if(compareRed1Sbor<=compareRed2Sbor){\r\n                compareRed1Sbor+=red[i][j];\r\n                compareRed1[indexRed1]=red[i][j];\r\n                indexRed1++;\r\n            }else{\r\n                compareRed2Sbor+=red[i][j];\r\n                compareRed2[indexRed2]=red[i][j];\r\n                indexRed2++;\r\n            }\r\n        }\r\n        if(compareRed1Sbor==compareRed2Sbor){\r\n            it_is_1=true;\r\n        }\r\n        int first_index=0,second_index=0;\r\n        if(compareRed1Sbor<compareRed2Sbor){\r\n            first_index=0;\r\n            second_index=0;\r\n            while(first_index+second_index<sizeOfRed[i]){\r\n                if(compareRed1[first_index]<compareRed2[second_index]){\r\n                    if(compareRed1Sbor-compareRed1[first_index]+compareRed2[second_index]==\r\n                       compareRed2Sbor-compareRed2[first_index]+compareRed1[second_index]){\r\n                        it_is_1=true;\r\n                        break;\r\n                       }\r\n                     first_index++;\r\n                }else{\r\n                        if(compareRed1Sbor-compareRed1[first_index]+compareRed2[second_index]==\r\n                           compareRed2Sbor-compareRed2[first_index]+compareRed1[second_index]){\r\n                            it_is_1=true;\r\n                            break;\r\n                           }\r\n                         second_index++;\r\n                    }\r\n\r\n            }\r\n        }\r\n\r\n        if(it_is_1){\r\n            answer[i]=1;\r\n        }else{\r\n            answer[i]=0;\r\n        }\r\n    }\r\n    for(int i=0;i<red_number;i++){\r\n        cout<<answer[i]<<"\\n";\r\n    }\r\n}\r\n\r\n'
p3
tp4
stp5
.