(I1
I12
I3
(dp0
Vfigures.%l
p1
(Vfigures.cpp
p2
S'#include <iostream>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nint input[10], n;\r\n\r\nint triugulnik()\r\n{\r\n    int namereni = 0;\r\n    int nivo[3];\r\n    pair<int, int> kude[3];\r\n    for (int i = 0, kolko = 1; namereni < 3; ++i)\r\n    {\r\n        if (input[namereni] >= kolko and input[namereni] <= kolko + i)\r\n        {\r\n            kude[namereni].first = kolko;\r\n            kude[namereni].second = kolko + i;\r\n            nivo[namereni] = i;\r\n            ++namereni;\r\n            --i;\r\n        }\r\n        else\r\n            kolko += i + 1;\r\n    }\r\n    if (nivo[0] == nivo[1] and input[1] - input[0] == nivo[2] - nivo[0] and kude[1].second - input[0] == kude[2].second - input[2] and input[1] - kude[0].first == input[2] - kude[2].first)\r\n        return input[1] - input[0];\r\n    if (nivo[1] == nivo[2] and input[2] - input[1] == nivo[2] - nivo[0] and input[0] - kude[0].first == input[1] - kude[1].first and kude[0].second - input[0] == kude[2].second - input[2])\r\n        return input[2] - input[1];\r\n    return -1;\r\n}\r\n\r\nint romb()\r\n{\r\n    int cpy[4];\r\n    for (int i = 0; i < 4; ++i)\r\n        cpy[i] = input[i];\r\n    //0\r\n    input[1] = cpy[2];\r\n    input[2] = cpy[3];\r\n    int res1 = triugulnik();\r\n    if (res1 != -1)\r\n    {\r\n        //0\r\n        input[1] = cpy[1];\r\n        //3\r\n        int res2 = triugulnik();\r\n        if (res2 == -1 or res2 != res1)\r\n            return -1;\r\n        return res1;\r\n    }\r\n\r\n\r\n    //0\r\n    input[1] = cpy[1];\r\n    input[2] = cpy[2];\r\n    res1 = triugulnik();\r\n    if (res1 == -1)\r\n        return -1;\r\n    input[0] = cpy[1];\r\n    input[1] = cpy[2];\r\n    input[2] = cpy[3];\r\n    int res2 = triugulnik();\r\n    if (res2 == -1 or res2 != res1)\r\n        return -1;\r\n    return res1;\r\n}\r\n\r\nint main ()\r\n{\r\n    int curr;\r\n    for (n = 0; cin >> curr; ++n)\r\n        input[n] = curr;\r\n\r\n    if (n != 3 and n != 4 and n != 6)\r\n    {\r\n        cout << "INCORRECT\\n";\r\n        return 0;\r\n    }\r\n\r\n    sort(input, input + n);\r\n\r\n    //triugulnik\r\n    if (n == 3)\r\n    {\r\n        int res = triugulnik();\r\n        if (res == -1)\r\n        {\r\n            cout << "INCORRECT\\n";\r\n            return 0;\r\n        }\r\n        cout << "T " << res << "\\n";\r\n        return 0;\r\n    }\r\n\r\n    //romb\r\n    if (n == 4)\r\n    {\r\n        int res = romb();\r\n        if (res == -1)\r\n        {\r\n            cout << "INCORRECT\\n";\r\n            return 0;\r\n        }\r\n        cout << "R " << res << \'\\n\';\r\n        return 0;\r\n    }\r\n\r\n    //6ugulnik\r\n    if (n == 6)\r\n    {\r\n        int namereni = 0;\r\n        int nivo[6];\r\n        for (int i = 0, kolko = 1; namereni < 6; ++i)\r\n        {\r\n            if (input[namereni] >= kolko and input[namereni] <= kolko + i)\r\n            {\r\n                nivo[namereni] = i;\r\n                ++namereni;\r\n                --i;\r\n            }\r\n            else\r\n                kolko += i + 1;\r\n        }\r\n        if (nivo[0] == nivo[1] and nivo[2] == nivo[3] and nivo[4] == nivo[5] and input[3] - input[2] == 2 * (input[1] - input[0]) and input[1] - input[0] == input[5] - input[4] and input[5] - input[4] == nivo[2] - nivo[0] and nivo[2] - nivo[0] == nivo[3] - nivo[1] and nivo[3] - nivo[1] == nivo[4] - nivo[2] and nivo[4] - nivo[2] == nivo[5] - nivo[3])\r\n        {\r\n            cout << "H " << input[1] - input[0] << \'\\n\';\r\n            return 0;\r\n        }\r\n        cout << "INCORRECT\\n";\r\n        return 0;\r\n    }\r\n    return 0;\r\n}\r\n'
p3
tp4
stp5
.