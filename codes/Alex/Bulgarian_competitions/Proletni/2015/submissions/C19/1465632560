(I1
I19
I1
(dp0
Vrect.%l
p1
(VrectBURZO.cpp
p2
S'#include<iostream>\r\n#include<vector>\r\nusing namespace std;\r\n\r\nchar pole[256][256];\r\nlong long nalqvo[256][256],nadolu[256][256];\r\n\r\nint main(){\r\n    cin.tie(NULL);\r\n    ios::sync_with_stdio(false);\r\n    int x,y,curr=1,redove,koloni,otg=0;\r\n    cin>>redove>>koloni;\r\n    for(x=0;x<redove;x++)\r\n        cin>>pole[x];\r\n    if(pole[0][0]==\'*\'){\r\n        nalqvo[0][0]=1;\r\n        nadolu[0][0]=1;\r\n    }\r\n    for(x=0;x<redove;x++){\r\n        for(y=0;y<koloni;y++){\r\n            if(pole[x][y]==\'*\'){\r\n                nalqvo[x][y]=curr;\r\n            }else if(y>0 and pole[x][y-1]==\'*\')\r\n                curr++;\r\n        }\r\n        if(pole[x][y-1]==\'*\')\r\n            curr++;\r\n    }\r\n    curr=1;\r\n    for(y=0;y<koloni;y++){\r\n        for(x=0;x<redove;x++){\r\n            if(pole[x][y]==\'*\'){\r\n                nadolu[x][y]=curr;\r\n            }else if(x>0 and pole[x-1][y]==\'*\')\r\n                curr++;\r\n        }\r\n        if(pole[x-1][y]==\'*\')\r\n            curr++;\r\n    }\r\n    int y1,x1;\r\n    for(x=0;x<redove-2;x++){\r\n        for(y=0;y<koloni-2;y++){\r\n            for(x1=x+2;x1<redove;x1++){\r\n                if(nadolu[x][y]==nadolu[x1][y]){\r\n                     for(y1=y+2;y1<koloni;y1++){\r\n                        if(nadolu[x][y1]==nadolu[x1][y1] and nalqvo[x][y]==nalqvo[x][y1] and nalqvo[x1][y]==nalqvo[x1][y1])\r\n                            otg++;\r\n                     }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    cout<<otg<<"\\n";\r\n    return 0;\r\n}\r\n'
p3
tp4
stp5
.