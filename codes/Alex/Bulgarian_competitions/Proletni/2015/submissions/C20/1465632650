(I1
I20
I3
(dp0
Vfigures.%l
p1
(Vfigures.cpp
p2
S'#include <iostream> // std::cin, std::cout\n#include <string>   // std::string\n#include <vector>   // std::vector\n#include <algorithm>// std::sort\n#include <stdlib.h> // atoi\n#include <cmath>    // std::abs\n\nusing namespace std;\n\nconstexpr int nums_to_row (int r)\n{\n\t\treturn (r * (r + 1)) / 2;\n}\n\nint row_of (int num)\n{\n\t\tfor (int row = 0 ; row < 256 ; row ++)\n\t\t\t\tif (nums_to_row (row) < num and num <= nums_to_row (row + 1))\n\t\t\t\t\t\treturn row;\n}\n\nint col_of (int num)\n{\n\t\treturn num - nums_to_row (row_of (num));\n}\n\nint num (int row, int col)\n{\n\t\treturn nums_to_row (row - 1) + col;\n}\n\nstruct vertex\n{\n\t\tint row, col;\n\t\tvertex (int num = 0)\n\t\t{\n\t\t\t\trow = row_of (num);\n\t\t\t\tcol = col_of (num);\n\t\t}\n\t\tint len (vertex a)\n\t\t{\n\t\t\t\tvertex b;\n\t\t\t\tb.row = row;\n\t\t\t\tb.col = col;\n\t\t\t\t//cout << b.row << " " << b.col << " vs " << a.row << " " << a.col << "\\n"; \n\t\t\t\tif (a.col == b.col)\n\t\t\t\t\t\treturn abs (b.row - a.row);\n\t\t\t\tif (a.row == b.row)\n\t\t\t\t\t\treturn abs (b.col - a.col);\n\t\t\t\tif (abs (b.row - a.row) == abs (b.col - a.col))\n\t\t\t\t\t\treturn abs (b.row - a.row);\n\t\t\t\treturn -1000003;\n\t\t}\n};\n\nvertex operator - (vertex a, vertex b)\n{\n\t\tvertex c = a;\n\t\tc.row -= b.row;\n\t\tc.col -= b.col;\n\t\treturn c;\n}\n\nbool operator == (vertex a, vertex b)\n{\n\t\treturn a.row == b.row and a.col == b.col;\n}\nint main ()\n{\n////////init\n\t\tfor (int row = 0 ; row < 256 ; row ++)\n\t\t\t\tnums_to_row (row);\n////////input\n\t\t//cout << row_of (7) << " " << col_of (7) << "\\n";\n\t\t//cout << row_of (8) << " " << col_of (8) << "\\n";\n\t\tcin.tie (nullptr);\n\t\tios::sync_with_stdio(false);\n\t\tstring input;\n\t\tvector < int > vertexes;\n\t\tgetline (cin, input);\n\t\tinput += " ";\n\t\tsize_t pos = 0;\n\t\tfor (int i = 0 ; i < input.size () ; i ++)\n\t\t\t\tif (input [i] == \' \')\n\t\t\t\t{\n\t\t\t\t\t\tvertexes.push_back (atoi (input.substr (pos, i - pos).c_str ()));\n\t\t\t\t\t\tpos = i + 1;\n\t\t\t\t}\n////////for (auto& x : vertexes)\n////////{\n////////\t\tcout << x << " -> " << row_of (x) << ", " << col_of (x) << "\\n";\n////////}\n\t\tif (vertexes.size () != 3 and vertexes.size () != 4 and vertexes.size () != 6)\n\t\t{\n\t\t\t\tcout << "INCORRECT\\n";\n\t\t\t\treturn 0;\n\t\t}/*\n\t\tsort (vertexes.begin (), vertexes.end ());\n\t\tif (vertexes.size () == 3)\n\t\t{\n\t\t\t\tvertex A (vertexes [0]), B (vertexes [1]), C (vertexes [2]);\n\t\t\t\tif (B.len (A) == C.len (A) and C.len (A) == C.len (B))\n\t\t\t\t\t\tcout << "T " << (C.len (A)) << "\\n";\n\t\t\t\telse\n\t\t\t\t\t\tcout << "INCORRECT\\n";\n\t\t}\n\t\tif (vertexes.size () == 4)\n\t\t{\n\t\t\t\tvertex A (vertexes [0]), B (vertexes [1]), C (vertexes [2]), D (vertexes [3]);\n\t\t\t\t//cout << B.len (A) << "\\n";\n\t\t\t\t//cout << C.len (A) << "\\n";\n\t\t\t\t//cout << D.len (C) << "\\n";\n\t\t\t\t//cout << C.len (B) << "\\n";\n\t\t\t\tif (B.len (A) == D.len (C) and B.len (A) == C.len (A) and C.len (A) == C.len (B))\n\t\t\t\t\t\tcout << "R " << (C.len (A)) << "\\n";\n\t\t\t\telse\n\t\t\t\t\t\tcout << "INCORRECT\\n";\n\t\t}*/\t\n}\n'
p3
tp4
stp5
.