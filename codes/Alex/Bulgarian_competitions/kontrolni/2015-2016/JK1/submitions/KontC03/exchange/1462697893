(I2
I24
I6
(dp0
Vexchange.%l
p1
(Vexchange-slow.cpp
p2
S'#include <iostream>\r\n#include <utility>\r\n#include <vector>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nconst long long MAXN=256;\r\nconst long long MAXS=2048;\r\n\r\nlong long n, s;\r\nlong long a[MAXN], b[MAXN], c[MAXN];\r\n\r\nvector<pair<long long, long long>> coins;\r\nstring memo[MAXS][MAXN];\r\n\r\nvoid Init()\r\n{\r\n    cin>>s>>n;\r\n    for (long long i=0; i<n; i++)\r\n    {\r\n        cin>>a[i];\r\n    }\r\n    for (long long i=0; i<n; i++)\r\n    {\r\n        cin>>b[i];\r\n        c[a[i]]+=b[i];\r\n    }\r\n    for (long long i=1; i<=200; i++)\r\n    {\r\n        if (c[i]!=0) coins.emplace_back(i, c[i]);\r\n    }\r\n    sort(coins.begin(), coins.end());\r\n}\r\n\r\nstring Plus(string x, string y)\r\n{\r\n    while (x.size()<y.size()) x="0"+x;\r\n    while (x.size()>y.size()) y="0"+y;\r\n\r\n    string res=""; int pren=0;\r\n    for (int i=x.size()-1; i>=0; i--)\r\n    {\r\n        int tmp=x[i]+y[i]-96+pren;\r\n        res=(char)((tmp%10)+48)+res;\r\n        pren=tmp/10;\r\n    }\r\n    if (pren!=0) res="1"+res;\r\n    return res;\r\n}\r\n\r\nvoid ToMinusOne()\r\n{\r\n    for (long long i=0; i<MAXS; i++)\r\n    {\r\n        for (long long j=0; j<MAXN; j++)\r\n        {\r\n            memo[i][j]="*";\r\n        }\r\n    }\r\n}\r\n\r\nstring Solve(long long sum, long long cnt)\r\n{\r\n    if (memo[sum][cnt]!="*") return memo[sum][cnt];\r\n\r\n    if (sum==0)\r\n    {\r\n        memo[sum][cnt]="1";\r\n        return "1";\r\n    }\r\n    else if (cnt>=coins.size())\r\n    {\r\n        memo[sum][cnt]="0";\r\n        return "0";\r\n    }\r\n\r\n    string tmp="0";\r\n    for (long long i=0; i<=coins[cnt].second; i++)\r\n    {\r\n        long long newSum=sum-coins[cnt].first*i;\r\n        if (newSum>=0) tmp=Plus(tmp, Solve(newSum, cnt+1));\r\n    }\r\n\r\n    memo[sum][cnt]=tmp;\r\n    return tmp;\r\n}\r\n\r\nint main()\r\n{\r\n    Init();\r\n    ToMinusOne();\r\n    cout<<Solve(s, 0)<<endl;\r\n    return 0;\r\n}\r\n\r\n'
p3
tp4
stp5
.