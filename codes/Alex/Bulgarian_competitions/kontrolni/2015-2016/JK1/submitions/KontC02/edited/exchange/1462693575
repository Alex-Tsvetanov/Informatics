#include <bits/stdc++.h>
#define endl '\n'
using namespace std;

const unsigned long long maxN = 205, maxA = 205, maxB = 5005, maxS = 2005;

bool used[maxA * maxB][maxA], used_states[maxS][maxN];
unsigned long long s, n, a[maxN], b, dp[maxS][maxN];
vector<unsigned long long> all_coins[maxN];

unsigned long long solve(unsigned long long sum, unsigned long long ind)
{
	if(sum == s) return 1;
	else if(sum > s || ind == n) return 0;
	else if(used_states[sum][ind]) return dp[sum][ind];
	
	unsigned long long current_ans = solve(sum, ind + 1);
	for(unsigned long long i = 0; i < all_coins[ind].size(); i++)
	{
		current_ans += solve(sum + all_coins[ind][i], ind + 1);
	}
	
	used_states[sum][ind] = true;
	dp[sum][ind] = current_ans;
	return current_ans;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	
	cin>>s>>n;
	for(unsigned long long i = 0; i < n; i++)
	{
		cin>>a[i];
	}
	for(unsigned long long i = 0; i < n; i++)
	{
		cin>>b;
		
		for(unsigned long long j = 1; j <= b; j++)
		{
			//used[j * a[i]][a[i]] = true;
			all_coins[i].push_back(j * a[i]);
		}
	}
	
	cout<<solve(0, 0)<<endl;
	return 0;
}

